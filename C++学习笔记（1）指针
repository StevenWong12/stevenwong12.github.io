**定义：指向被指向对象的内存地址**

c++中指针访问使用运算符   *
而访问某个变量的地址可在变量名前加 **&**
 
 
p1 = & a // 把a的地址写入指针变量p1中

而a的地址可以表示为

&a 或 p1
a（所在地址）存储的值可表示为
 星号（&a）或*p1
int 变量a和指针变量p1类似一个硬币的两面。变量a表示值，并用&运算符来获取地址；而变量p1表示地址，并使用 * 运算符来获得值。
 用下面这个例子可以看得更清楚


include<iostream>
using namespace std;
int main()
{
   long int a = 10, b = 20, t;
   long int *p1 = &a, *p2 = &b, *pt; //用变量地址值初始化指针变量
   cout << p1 << '\t' << p2 << endl; // 输出变量的地址
   cout << *p1 << '\t' << *p2 << endl; // 输出变量的值
   t = *p1; *p1 = *p2; *p2 = t; // 交换变量的值（a、b在此时被交换）
   cout << *p1 << '\t' << *p2 << endl;
   pt = p1;p1 = p2;p2 = pt;//交换指针的值（地址）
   cout << p1 << '\t' << p2 << endl;
   cout << *p1 << '\t' << *p2 << endl;
   cout << a << '\t' << b << endl;
   }

程序运行结果：
0012FF60     0012FF54
10   20
20 10
0012FF54  0012FF60
10 20
20 10

要注意的是变量的值可通过指针改变内存地址来改变值
